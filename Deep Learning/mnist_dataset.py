# -*- coding: utf-8 -*-
"""mnist_dataset

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v24QRGJ4FrOnFBzfBN3A0w85_BJIadQf
"""

import numpy as np
import matplotlib.pyplot as plt

import tensorflow as tf

(tx, ty), (tsx, tsy) = tf.keras.datasets.mnist.load_data()
tx.shape

ty[0], tsy[0]

ty = tf.keras.utils.to_categorical(ty, num_classes=10)
tsy = tf.keras.utils.to_categorical(tsy, num_classes=10)

ty[0], tsy[0]

model = tf.keras.models.Sequential()

model.add(tf.keras.layers.Reshape((784, ), input_shape=(28, 28, )))

model.add(tf.keras.layers.BatchNormalization())

model.add(tf.keras.layers.Dense(200, activation="sigmoid"))

model.add(tf.keras.layers.Dense(100, activation="sigmoid"))

model.add(tf.keras.layers.Dense(60, activation="sigmoid"))

model.add(tf.keras.layers.Dense(30, activation="sigmoid"))

model.add(tf.keras.layers.Dense(10, activation="softmax"))

model.compile(optimizer="adam", loss="categorical_crossentropy", metrics=['accuracy'])

model.fit(tx, ty, validation_data=(tsx, tsy), epochs=5, batch_size=32)