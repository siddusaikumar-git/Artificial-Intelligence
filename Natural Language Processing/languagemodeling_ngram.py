# -*- coding: utf-8 -*-
"""LanguageModeling_Ngram.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-NCyhNTHs5tUra-z9TwIZflQnBIRQETs
"""

import pandas as pd
import numpy as np
import nltk

from nltk.corpus import reuters

nltk.download('reuters')
nltk.download('punkt')

reuters.categories()

for i, sent in enumerate(reuters.sents()[:10]):
  print("sentence ", i, ":", " ".join(sent))

from collections import Counter, defaultdict
from nltk import trigrams

model = defaultdict(lambda : defaultdict(lambda: 0))

for i, sent in enumerate(reuters.sents()):
  for w1, w2, w3 in trigrams(sent):
    model[(w1, w2)][w3] += 1

model

sorted(dict(model["world", "markets"]).items(), key=lambda x:x[1], reverse=True)

for w1_2 in model:
  total_count = sum(model[w1_2].values())
  for w3 in model[w1_2]:
    model[w1_2][w3] /= total_count
print(dict(model))